{"version":3,"sources":["assets/imgs/logo.png","components/template/logo.jsx","components/template/nav.jsx","components/template/footer.jsx","components/template/header.jsx","components/template/main.jsx","components/home/home.jsx","components/user/userCrud.jsx","main/routes.jsx","main/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","className","es","to","src","logo","alt","Nav","Footer","Header","concat","icon","title","subtitle","Main","Fragment","template_header","children","Home","template_main","baseUrl","initialState","user","name","email","list","Headerprops","UserCrud","state","_this2","this","axios","then","resp","setState","data","_this3","method","id","url","getUpdatedList","add","arguments","length","undefined","filter","u","unshift","event","Object","objectSpread","target","value","_this4","type","onChange","e","updateField","placeholder","onClick","save","_this5","delete","renderRows","_this6","map","key","load","remove","renderForm","renderTable","Component","Routes","react_router_es","exact","path","component","from","App","template_logo","template_nav","routes","template_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_main_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb8cb5cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6777486e.png\";","import  './logo.css';\nimport React from 'react';\nimport logo from '../../assets/imgs/logo.png';\nimport {Link} from 'react-router-dom';\n\nconst Logo = props =>\n      <aside className=\"logo\">\n         <Link to=\"/\" className=\"logo\">\n             <img src={logo} alt=\"Logo\" />\n         </Link>\n      </aside>\nexport default Logo;\n","import './nav.css';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Nav = props =>\n   <aside className=\"menu-area\">\n      <nav className=\"menu\">\n         <Link to=\"/\">\n            <i className=\"fa fa-home\"></i>\n            Início\n         </Link>\n         <Link to=\"/users\">\n            <i className=\"fa fa-users\"></i>\n            Usuários\n         </Link>\n      </nav>\n   </aside>\nexport default Nav;","import './footer.css';\nimport React from 'react';\n\nconst Footer = props =>\n    <footer className=\"footer\">\n       <span>\n           Desenvolvido com <i className=\"fa fa-heart text-danger\"></i> por <strong>Cod<span  className=\"text-danger\">3</span>r</strong>\n       </span>\n    </footer>\nexport default Footer;","import './header.css';\nimport React from 'react';\n\nconst Header = props => \n    <header className=\"header d-none d-sm-flex flex-column\">\n        <h1 className=\"mt-3\">\n        <i className={`fa fa-${props.icon}`}></i>{props.title}\n        </h1>\n        <p className=\"lead text-muted\">{props.subtitle}</p>\n    </header>\nexport default Header;","import './main.css';\nimport React from 'react';\nimport Header from './header';\n\nconst Main = props => \n    <React.Fragment>\n        <Header {...props}/>\n        <main className=\"content container-fluid\">\n           <div className=\"p-3 mt-3\">\n              {props.children}\n           </div>\n        </main>\n    </React.Fragment>\nexport default Main;","import React from 'react';\nimport Main from '../template/main';\n\nconst Home = props =>\n    <Main icon=\"home\" title=\"Início\" subtitle=\"Segundo projeto do caṕitulo de React.\">\n        <div className=\"display-4\">Bem-vindo!</div>\n        <hr></hr>\n        <p className=\"mb-0\">Sistema para exemplificar a construção de um cadastro de usuário desenvolvido em React.</p>\n\n    </Main>\n\n\nexport default Home;","import React, { Component } from 'react';\nimport Main from '../template/main';\nimport axios from 'axios';\nimport './userCrud.css'\n\n\nconst baseUrl = 'http://localhost:3001/users'\nconst initialState = {\n    user: { name: '', email: '' },\n    list: []\n}\n\nconst Headerprops = {\n    icon: 'users',\n    title: 'Usuários',\n    subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar, e Excluir'\n}\n\nclass UserCrud extends Component {\n\n    state = { ...initialState }\n\n    componentWillMount() {\n        axios(baseUrl).then(resp => {\n            this.setState({list: resp.data})\n        })\n    }\n\n    clear() {\n        this.setState({ user: initialState.user })\n    }\n\n    save() {\n        const user = this.state.user\n        const method = user.id ? 'put' : 'post'\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\n        axios[method](url, user)\n            .then(resp => {\n                const list = this.getUpdatedList(resp.data)\n                this.setState({ user: initialState.user, list })\n            })\n\n    }\n\n    getUpdatedList(user, add = true) {\n        const list = this.state.list.filter(u => u.id !== user.id)\n        if(add) list.unshift(user)\n        return list\n    }\n\n    updateField(event) {\n        const user = { ...this.state.user }\n        user[event.target.name] = event.target.value\n        this.setState({ user })\n    }\n\n    renderForm() {\n        return (\n            <div className=\"form\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.user.name} onChange={e => this.updateField(e)} placeholder=\"Digite seu nome...\" />\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>E-mail</label>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.user.email} onChange={e => this.updateField(e)} placeholder=\"Digite seu E-mail...\" />\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-end\">\n                        <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\n                            Salvar\n                         </button>\n                        <button className=\"btn btn-secondary ml-2\" onClick={e => this.save(e)}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n\n    load(user) {\n        this.setState({user})\n    }\n\n    remove(user) {\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n            const list = this.getUpdatedList(user, false )\n            this.setState({list})\n        })\n    }\n\n    renderTable() {\n        return (\n            <table className=\"table mt-4\">\n               <thead>\n                   <tr>\n                       <th>Nome</th>\n                        <th>E-mail</th>\n                        <th>Ações</th>\n                   </tr>\n               </thead>\n               <tbody>\n                   {this.renderRows()}\n               </tbody>\n            </table>\n        )\n    }\n\n    renderRows() {\n        return this.state.list.map(user => {\n            return (\n                <tr key={user.id}>\n                   <td>{user.name}</td>\n                   <td>{user.email}</td>\n                   <td>\n                       <button className=\"btn btn-warning\">\n                           <i className=\"fa fa-pencil\" onClick={() => this.load(user)}></i>\n                       </button>\n                   </td>\n                   <td>\n                       <button className=\"btn btn-danger ml-2\">\n                           <i className=\"fa fa-trash\" onClick={() => this.remove(user)} ></i>\n                       </button>\n                   </td> \n                </tr>\n            )\n        })\n    }\n    \n    render() {\n        return (\n            <Main {...Headerprops}>\n              {this.renderForm()}\n              {this.renderTable()}\n            </Main>\n        )\n    }\n}\n\nexport default UserCrud;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router';\n\nimport Home from '../components/home/home';\nimport UserCrud from '../components/user/userCrud';\n\nconst Routes = props =>\n    <Switch>\n        <Route exact path='/' component={Home} />\n        <Route  path='/users' component={UserCrud} />\n        <Redirect from='*' to='/' />\n    </Switch>\n\nexport default Routes;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport './App.css';\nimport React from 'react';\nimport Logo from '../components/template/logo';\nimport Nav from '../components/template/nav';\nimport Footer from '../components/template/footer';\nimport {BrowserRouter} from 'react-router-dom';\nimport Routes from './routes';\n\n\nconst App = props => \n<BrowserRouter>\n   <div className=\"app\">\n      <Logo />\n      <Nav />\n      <Routes />\n      <Footer />\n   </div>\n</BrowserRouter>\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}